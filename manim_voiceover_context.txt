TITLE: Importing VoiceoverScene Class (Python)
DESCRIPTION: Imports the necessary `VoiceoverScene` class from the `manim_voiceover` library to enable voiceover functionality in a Manim scene. This is the initial step required before defining a scene that uses voiceovers.
SOURCE: https://github.com/manimcommunity/manim-voiceover/blob/main/docs/source/quickstart.rst#_snippet_0

LANGUAGE: python
CODE:
```
from manim_voiceover import VoiceoverScene
```

----------------------------------------

TITLE: Inheriting from VoiceoverScene (Python)
DESCRIPTION: Defines a custom Manim scene class `MyAwesomeScene` that inherits from `VoiceoverScene`. This inheritance provides the scene with the methods and properties required to integrate voiceovers into the animation timeline.
SOURCE: https://github.com/manimcommunity/manim-voiceover/blob/main/docs/source/quickstart.rst#_snippet_1

LANGUAGE: python
CODE:
```
class MyAwesomeScene(VoiceoverScene):
    def construct(self):
        ...
```

----------------------------------------

TITLE: Wrapping Animation with Voiceover (Python)
DESCRIPTION: Uses a `with` block around `self.voiceover()` to associate a block of animation code with a specific voiceover text. Manim will ensure the animation within the block is timed relative to the voiceover duration, waiting for the voiceover to finish if necessary.
SOURCE: https://github.com/manimcommunity/manim-voiceover/blob/main/docs/source/quickstart.rst#_snippet_4

LANGUAGE: python
CODE:
```
with self.voiceover(text="This circle is drawn as I speak.") as tracker:
    ... # animate whatever needs to be animated here
```

----------------------------------------

TITLE: Setting gTTS Speech Service (Python)
DESCRIPTION: Configures the scene to use the `GTTSService` for generating voiceovers. This service utilizes the Google Translate API and requires an internet connection. It's recommended as a starting point due to its cross-platform compatibility.
SOURCE: https://github.com/manimcommunity/manim-voiceover/blob/main/docs/source/quickstart.rst#_snippet_3

LANGUAGE: python
CODE:
```
from manim_voiceover import VoiceoverScene
from manim_voiceover.services.gtts import GTTSService

class MyAwesomeScene(VoiceoverScene):
    def construct(self):
        self.set_speech_service(GTTSService())
```

----------------------------------------

TITLE: Timing Animation with Voiceover Duration (Python)
DESCRIPTION: Demonstrates using the `tracker` object provided by the `voiceover` context manager to get the voiceover's duration. This duration is then used to set the `run_time` of an animation (`Create(circle)`), ensuring the animation's length matches the voiceover segment.
SOURCE: https://github.com/manimcommunity/manim-voiceover/blob/main/docs/source/quickstart.rst#_snippet_5

LANGUAGE: python
CODE:
```
with self.voiceover(text="This circle is drawn as I speak.") as tracker:
    self.play(Create(circle), run_time=tracker.duration)
```

----------------------------------------

TITLE: Inheriting from Multiple Scene Classes (Python)
DESCRIPTION: Demonstrates how to create a scene class that inherits from both `MovingCameraScene` and `VoiceoverScene`. This allows combining voiceover capabilities with other Manim features like a moving camera, provided there are no method or variable name collisions between parent classes.
SOURCE: https://github.com/manimcommunity/manim-voiceover/blob/main/docs/source/quickstart.rst#_snippet_2

LANGUAGE: python
CODE:
```
from manim.scene.moving_camera_scene import MovingCameraScene

class MyAwesomeScene(MovingCameraScene, VoiceoverScene):
    def construct(self):
        ...
```





TITLE: Creating a Translatable Manim Scene (Python)
DESCRIPTION: This Python code defines a Manim scene `TranslationExample` that utilizes `manim-voiceover` and the `gettext` convention for internationalization. It shows how to load locale and domain from environment variables, obtain the `_()` translation function, set up a TTS service (like gTTS), and wrap voiceover text strings with `_()` to enable translation lookup in `.po` files.
SOURCE: https://github.com/manimcommunity/manim-voiceover/blob/main/docs/source/translate.rst#_snippet_0

LANGUAGE: python
CODE:
```
import os
from manim import *
from manim_voiceover import VoiceoverScene
from manim_voiceover.services.gtts import GTTSService
from manim_voiceover.translate import get_gettext

# It is good practice to get the LOCALE and DOMAIN from environment variables
LOCALE = os.getenv("LOCALE")
DOMAIN = os.getenv("DOMAIN")

# The following function uses LOCALE and DOMAIN to set the language, and
# returns a gettext function that is used to insert translations.
_ = get_gettext()

class TranslationExample(VoiceoverScene):
    def construct(self):
        # We use the free TTS service from Google Translate
        # The TTS language is set via the LOCALE environment variable
        self.set_speech_service(GTTSService(lang=LOCALE))

        circle = Circle()
        square = Square().shift(2 * RIGHT)

        # The voiceover strings are wrapped in _()
        # This means that their translations will be looked up in the .po files
        # and used to replace the original strings
        with self.voiceover(text=_("This circle is drawn as I speak.")) as tracker:
            self.play(Create(circle), run_time=tracker.duration)

        with self.voiceover(text=_("Let's shift it to the left 2 units.")) as tracker:
            self.play(circle.animate.shift(2 * LEFT), run_time=tracker.duration)

        with self.voiceover(
            text=_("Now, let's transform it into a square.")
        ) as tracker:
            self.play(Transform(circle, square), run_time=tracker.duration)

        with self.voiceover(text=_("Thank you for watching.")):
            self.play(Uncreate(circle))

        self.wait()
```


TITLE: Setting gTTS Service for Recording Workflow (Python)
DESCRIPTION: Sets the speech service to `GTTSService` as the initial step in a workflow for recording custom voiceovers. This allows developing and timing the animation using a text-to-speech engine before switching to the recorder.
SOURCE: https://github.com/manimcommunity/manim-voiceover/blob/main/docs/source/quickstart.rst#_snippet_7

LANGUAGE: python
CODE:
```
from manim_voiceover import VoiceoverScene
from manim_voiceover.services.gtts import GTTSService

class MyAwesomeScene(VoiceoverScene):
    def construct(self):
        self.set_speech_service(GTTSService())

        with self.voiceover(text="This circle is drawn as I speak.") as tracker:
            self.play(Create(circle))
```

----------------------------------------

